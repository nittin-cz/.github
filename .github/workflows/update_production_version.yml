name: Reusable workflwo for updating production version

on:
  workflow_call:
    # inputs:
    #   application:
    #     type: string
    #     required: true
    #   change:
    #       type: string
    #       required: true

env:
  VERSION_CHANGE:
  PR_BODY:

jobs:
  extract_pr_body:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Extract pull request template values
      id: extract-pr-template
      run: |
        # Extracting the pull request body
        pr_body="${{ github.event.pull_request.body }}"

        echo "${{ env.pr_body }}"

         # Extracting the Type of Change section
          type_of_change=$(echo "$pr_body" | sed -n '/### Type of Change/,/###/p' | sed '1d;$d')
          
          # Check which type of change is selected
          major=$(echo "$type_of_change" | grep '\[x\]' | grep -c 'Major')
          minor=$(echo "$type_of_change" | grep '\[x\]' | grep -c 'Minor')
          patch=$(echo "$type_of_change" | grep '\[x\]' | grep -c 'Patch')
          no_version_change=$(echo "$type_of_change" | grep '\[x\]' | grep -c 'No Version Change')
          
          # Export the selected type as an output
          if [ "$major" -eq 1 ]; then
            echo "::set-output name=change_type::Major"
          elif [ "$minor" -eq 1 ]; then
            echo "::set-output name=change_type::Minor"
          elif [ "$patch" -eq 1 ]; then
            echo "::set-output name=change_type::Patch"
          elif [ "$no_version_change" -eq 1 ]; then
            echo "::set-output name=change_type::No Version Change"
          else
            echo "::set-output name=change_type::Unknown"
          fi

    - name: Use extracted values
      run: |
        echo "Type of Change: ${{ steps.extract-pr-template.outputs.change_type }}"


    # - name: Extract PR body
    #   id: extract-body
    #   run: |
    #     echo "PR_BODY=$(jq -r .pull_request.body < $GITHUB_EVENT_PATH)" >> $GITHUB_ENV

    # - name: Display PR body
    #   run: |
    #     echo "The PR body is: ${{ env.PR_BODY }}"

    - name: Determine version change
      id: determine-version
      run: |
        if echo "${{ env.PR_BODY }}" | grep -q "Major (breaking changes)"; then
          echo "VERSION_CHANGE=major" >> $GITHUB_ENV
        elif echo "${{ env.PR_BODY }}" | grep -q "Minor (non-breaking changes)"; then
          echo "VERSION_CHANGE=minor" >> $GITHUB_ENV
        elif echo "${{ env.PR_BODY }}" | grep -q "Patch (small bug fixes or improvements)"; then
          echo "VERSION_CHANGE=patch" >> $GITHUB_ENV
        else
          echo "VERSION_CHANGE=none" >> $GITHUB_ENV
        fi

    - name: Show version change
      run: |
        echo "The type of version change is: ${{ env.VERSION_CHANGE }}"

  reusable_workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
