name: Reusable workflwo for updating production version

on:
  workflow_call:
    # inputs:
    #   application:
    #     type: string
    #     required: true
    #   change:
    #       type: string
    #       required: true

env:
  change_type:
  increment:

jobs:
  extract_change_type:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract PR body
      id: extract_pr_body
      run: echo "${{ github.event.pull_request.body }}" > pr_body.txt

    - name: Print PR body
      run: |
        cat pr_body.txt

    - name: Extract Change Type
      id: extracted_change_type 
      run: |
        CHANGE_TYPE=$(grep -Eo '\[x\] (Major|Minor|Patch|No Version Change)' pr_body.txt | sed -E 's/\[x\] //')
        echo "change_type=$CHANGE_TYPE" >> $GITHUB_ENV

    - name: Output change type
      run: |
        echo "Selected change type is: ${{ env.change_type }}"

  update_production_version:
    needs: ['extract_change_type']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Determine Increment Type
        id: determine_increment
        run: |
          case "${{ env.change_type }}" in
            Major)
              echo "increment=major" >> $GITHUB_ENV
              ;;
            Minor)
              echo "increment=minor" >> $GITHUB_ENV
              ;;
            Patch)
              echo "increment=patch" >> $GITHUB_ENV
              ;;
            *)
              echo "increment=patch" >> $GITHUB_ENV
              ;;
          esac

      - name: Get next version
        uses: reecetech/version-increment@2024.4.3
        id: version
        with:
          scheme: semver
          increment: ${{ env.increment }}

      - name: echo
        run: |
          echo "${{ steps.version.outputs.version }}"


      # - name: Create a GitHub release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     tag: "${{ steps.version.outputs.version }}"
      #     name: Release ${{ steps.tag_version.outputs.new_tag }}
      #     body: ${{ steps.tag_version.outputs.changelog }}