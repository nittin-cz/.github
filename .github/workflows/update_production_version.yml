name: Reusable workflwo for updating production version

on:
  workflow_call:
    inputs:
      be_folder:
        type: string
        required: false
      fe_folder:
        type: string
        required: false
      application_type:
        type: string
        required: true
    secrets:
      workflow_bot_token:
        required: true

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  Extract_change_type:
    runs-on: ubuntu-latest
    outputs:
      version_type: ${{ env.change_type }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract Pull Request body
        id: extract_pr_body
        run: echo "${{ github.event.pull_request.body }}" > pr_body.txt

      - name: Print PR body
        run: cat pr_body.txt

      - name: Extract Change Type
        id: extracted_change_type
        run: |
          CHANGE_TYPE=$(grep -Eo '\[x\] (Major|Minor|Patch|No Version Change)' pr_body.txt | sed -E 's/\[x\] //')
          echo "${CHANGE_TYPE:-Patch}" > change_type.txt

      - name: Upload Change Type Artifact
        uses: actions/upload-artifact@v4
        with:
          name: change_type
          path: change_type.txt

  Get_new_production_version:
    needs: Extract_change_type
    if: ${{ needs.Extract_change_type.outputs.version_type != 'No Version Change' }}
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.v-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Change Type Artifact
        uses: actions/download-artifact@v4
        with:
          name: change_type
          path: .

      - name: Read Change Type
        id: read_change_type
        run: |
          CHANGE_TYPE=$(cat change_type.txt)
          echo "change_type=${CHANGE_TYPE}" >> $GITHUB_ENV

      - name: Determine Increment Type
        id: determine_increment
        run: |
          case "${{ env.change_type }}" in
            Major)
              echo "increment=major" >> $GITHUB_ENV
              ;;
            Minor)
              echo "increment=minor" >> $GITHUB_ENV
              ;;
            Patch)
              echo "increment=patch" >> $GITHUB_ENV
              ;;
            *)
              echo "increment=patch" >> $GITHUB_ENV
              ;;
          esac

      - name: Get next version
        uses: reecetech/version-increment@2024.4.3
        id: version
        with:
          scheme: semver
          increment: ${{ env.increment }}

      # - name: Bump version and push tag
      #   id: tag_version
      #   uses: mathieudutour/github-tag-action@v6.2
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     default_bump: ${{ env.increment }}

  Update_package_json:
    needs: Get_new_production_version
    runs-on: ubuntu-latest
    if: needs.Get_new_production_version.outputs.version != '' && (inputs.be_folder != '' || inputs.fe_folder != '')
    outputs:
      version: ${{ needs.Get_new_production_version.outputs.version }}
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.WORKFLOW_BOT_ID }}
          private-key: ${{ secrets.workflow_bot_token }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Update backend/package.json Version
        if: inputs.be_folder != ''
        run: |
          jq ".version=\"${{ needs.Get_new_production_version.outputs.version }}\"" ${{ inputs.be_folder }}/package.json > ${{ inputs.be_folder }}/temp.json && mv ${{ inputs.be_folder }}/temp.json ${{ inputs.be_folder }}/package.json

      - name: Update frontend/package.json Version
        if: inputs.fe_folder != ''
        run: |
          jq ".version=\"${{ needs.Get_new_production_version.outputs.version }}\""  ${{ inputs.fe_folder }}/package.json > ${{ inputs.fe_folder }}/temp.json && mv ${{ inputs.fe_folder }}/temp.json ${{ inputs.fe_folder }}/package.json

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Changed application version in package.json to ${{ needs.Get_new_production_version.outputs.version }}"
          committer_name: Nittin GitHub Actions
          committer_email: actions@nittin.cz
          tag: ${{ needs.Get_new_production_version.outputs.version }}
          github_token: ${{ steps.app-token.outputs.token }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ needs.Get_new_production_version.outputs.version }}"

          
      # - uses: everlytic/branch-merge@1.1.2
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     source_ref: test
      #     target_branch: 'main'
      #     commit_message_template: '[Automated] Merged ${{ github.ref }} into target main branch'


      # - name: Merge branch into main
      #   uses: devmasx/merge-branch@master
      #   with:
      #     type: now
      #     from_branch: test
      #     target_branch: main
      #     message: "MERGE: Application version change in package.json to ${{ needs.Get_new_production_version.outputs.version }}"
      #     github_token: ${{ secrets.GITHUB_TOKEN }}


