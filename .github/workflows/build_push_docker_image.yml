name: Build docker application

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      with_args:
        required: true
        type: boolean
      dockerfile_path:
        required: true
        type: string
      extra_flags:
        required: false
        type: string
    secrets:
      token:
        required: true
    outputs:
      repo_name: 
        value: ${{ jobs.Build.outputs.repo_name }}

jobs:
  Build:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.repo_name.outputs.lowercase }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.token }}

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ inputs.REGISTRY }}/${{ github.repository }}

      - id: repo_name
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.event.repository.name }}

      - name: Build and push docker image with build arg
        if: inputs.with_args
        run: |
          docker buildx build  --build-arg mode=${{ github.base_ref }} --push -t ${{ steps.meta.outputs.tags }} --cache-to type=inline --cache-from type=registry,ref=${{ steps.meta.outputs.tags }} ${{ inputs.extra_flags }} ${{ inputs.dockerfile_path }}

      - name: Build and push docker image wihout build args
        if: inputs.with_args == false
        run: |
          docker buildx build --push -t ${{ steps.meta.outputs.tags }} --cache-to type=inline --cache-from type=registry,ref=${{ steps.meta.outputs.tags }} ${{ inputs.extra_flags }} ${{ inputs.dockerfile_path }}
